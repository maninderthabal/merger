/** ImplantTSScannor.hpp generated by R. Yokoyama 09/06/2018 **/

#ifndef VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_
#define VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_

#include "TSScannorBase.hpp"
#include "ProcessorRootStruc.hpp"
#include "BigRIPSTreeData.h"
#include "OutputTreeData.hpp"
#include "DumpTreeData.h"

/** timestamp scannor class for implant events **/
class ImplantTSScannor : public TSScannorBase<PixTreeEvent>
{
public:
    const static std::string kMsgPrefix;
    ImplantTSScannor(){}
    ~ImplantTSScannor(){}
    void SetReader();

protected:
    /** energy gates on PSPMT dynode**/
    Double_t low_gain_min_;
    Double_t low_gain_max_;

    ULong64_t GetTS() const
    {
        if(!tree_data_) throw kMsgPrefix + "in GetTS(), three_data is null";
        if(!tree_data_->Get()) throw kMsgPrefix + "in GetTS(), three_data->Get() returned null";
        return tree_data_->Get()->externalTS1;
    }

    Bool_t IsInGate() const; // gate conditions
};

/** timestamp scannor class for implant events **/
class ImplantTSScannor2 : public TSScannorBase<DumpTreeData>
{
public:
    const static std::string kMsgPrefix;
    ImplantTSScannor2(){}
    ~ImplantTSScannor2(){}
    void SetReader();

protected:
    /** energy gates on PSPMT dynode**/
    Double_t low_gain_min_;
    Double_t low_gain_max_;

    ULong64_t GetTS() const
    {
        if(!tree_data_) throw kMsgPrefix + "in GetTS(), three_data is null";
        if(!tree_data_->Get()) throw kMsgPrefix + "in GetTS(), three_data->Get() returned null";
        return tree_data_->Get()->externalTS1;
    }

    Bool_t IsInGate() const; // gate conditions
};

/** timestamp scannor class for implant events merged with BigRIPS events **/
class MergedImplantTSScannor : public TSScannorBase<OutputTreeData<PixTreeEvent, TreeData>>
{
public:
    const static std::string kMsgPrefix;
    MergedImplantTSScannor(){}
    ~MergedImplantTSScannor(){}
    void SetReader();

protected:

    ULong64_t GetTS() const {return tree_data_->Get()->externalTS1;}
};

/** timestamp scannor class for implant events merged with BigRIPS events **/
class MergedImplantTSScannor2 : public TSScannorBase<OutputTreeData<DumpTreeData, TreeData>>
{
public:
    const static std::string kMsgPrefix;
    MergedImplantTSScannor2(){}
    ~MergedImplantTSScannor2(){}
    void SetReader();

protected:

    ULong64_t GetTS() const {return tree_data_->Get()->externalTS1;}
};


#endif /* VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_ */
